#include<iostream>
#include<string>
#include<map>
#include<vector>
using namespace std;

class obj {
public:
	long num;
	char sign;
	bool is_num;
};

char dict[10][5][6] = { { { '6','6','6','6','6','\0' },{ '6','.','.','.','6','\0' },{ '6','.','.','.','6','\0' },{ '6','.','.','.','6','\0' },{ '6','6','6','6','6','\0' } },
{ { '.','.','.','.','6','\0' },{ '.','.','.','.','6','\0' },{ '.','.','.','.','6','\0' },{ '.','.','.','.','6' ,'\0' },{ '.','.','.','.','6','\0' } },
{ { '6','6','6','6','6','\0' },{ '.','.','.','.','6','\0' },{ '6','6','6','6','6','\0' },{ '6','.','.','.','.' ,'\0' },{ '6','6','6','6','6','\0' } },
{ { '6','6','6','6','6','\0' },{ '.','.','.','.','6','\0' } ,{ '6','6','6','6','6','\0' },{ '.','.','.','.','6' ,'\0' } ,{ '6','6','6','6','6','\0' } },
{ { '6','.','.','.','6','\0' },{ '6','.','.','.','6','\0' } ,{ '6','6','6','6','6','\0' },{ '.','.','.','.','6' ,'\0' },{ '.','.','.','.','6','\0' } },
{ { '6','6','6','6','6','\0' },{ '6','.','.','.','.','\0' },{ '6','6','6','6','6','\0' },{ '.','.','.','.','6','\0' },{ '6','6','6','6','6' ,'\0' } },
{ { '6','6','6','6','6','\0' },{ '6','.','.','.','.','\0' },{ '6','6','6','6','6' ,'\0' },{ '6','.','.','.','6','\0' },{ '6','6','6','6','6' ,'\0' } },
{ { '6','6','6','6','6','\0' },{ '.','.','.','.','6','\0' } ,{ '.','.','.','.','6','\0' } ,{ '.','.','.','.','6','\0' } ,{ '.','.','.','.','6' ,'\0' } },
{ { '6','6','6','6','6','\0' } ,{ '6','.','.','.','6','\0' } ,{ '6','6','6','6','6','\0' } ,{ '6','.','.','.','6' ,'\0' } ,{ '6','6','6','6','6','\0' } },
{ { '6','6','6','6','6','\0' } ,{ '6','.','.','.','6','\0' } ,{ '6','6','6','6','6','\0' } ,{ '.','.','.','.','6','\0' } ,{ '6','6','6','6','6','\0' } }
};

//int main() {
//
//	int n;
//	cin >> n;
//	string* express = new string[n];
//	for (int i = 0; i < n; i++) {
//		cin >> express[i];
//	}
//
//	string* result = new string[n];
//	for (int i = 0; i < n; i++) {
//		vector<obj> x;
//		for (int j = 0; j < express[i].size(); j++) {
//			obj* o = NULL;
//
//			switch (express[i][j]) {
//			case '+':
//			case '-': {
//				o = new obj();
//				o->sign = express[i][j];
//				o->is_num = false;
//				x.push_back(*o);
//			}; break;
//			case '6': {
//				o = new obj();
//				o->is_num = true;
//				o->num = 6;
//				x.push_back(*o);
//			}; break;
//			case '*': {
//				x[x.size() - 1].num *= 6;
//				j++;
//			}; break;
//			default:
//				return 4;
//			}
//		}
//		long temp = 0;
//		for (int j = 0; j < x.size(); j++) {
//			if (!x[j].is_num) {
//				switch (x[j].sign) {
//				case '+': {
//					temp = temp + x[j + 1].num;
//				}; break;
//				case '-': {
//					temp = temp - x[j + 1].num;
//				}
//				}
//				j++;
//			}
//			else {
//				temp = x[j].num;
//			}
//	  }
//		result[i] = to_string(temp);
//
//	 //Êä³ö½á¹û
//		for (int z = 0; z < 5; z++) {
//			for (int j = 0; j < result[i].size(); j++) {
//				int index = result[i][j] - '0';
//				string output_num = dict[index][z];
//				cout << output_num;
//				if (j != (result[i].size() - 1))
//					cout << "..";
//			}
//			cout << endl;
//		}
//
//	}
//	system("pause");
//}